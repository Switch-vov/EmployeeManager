<?xml version="1.0" encoding="utf-8" ?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xmlns:context="http://www.springframework.org/schema/context"
 	xmlns:tx="http://www.springframework.org/schema/tx"
 	xsi:schemaLocation="
 		http://www.springframework.org/schema/beans 
 		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    	http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context-2.5.xsd
    	http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    	
    	<!-- 启用注解扫描 -->
    	<context:annotation-config />
    	
    	<!-- 在容器文件中配置bean(service/dao/domain/action/数据源) -->
    	<!-- 配置测试服务类 -->
    	<bean id="testService" class="com.pc.test.TestService">
    		<property name="name" value="张三" />
    	</bean>
    	
    	<!-- 配置数据源 -->
    	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
    		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:SWITCH" />
    		<property name="username" value="scott" />
    		<property name="password" value="123456" />
    		
    		<!-- 连接池启动时初始值 -->
    		<property name="initialSize" value="3" />
    		<!-- 连接池的最大值 -->
    		<property name="maxActive" value="500" />
    		<!-- 最大空闲值，当经历一个高峰时间后，连接池可以慢慢将已经不用的连接慢慢释放一部分，一直减少到maxIdle为止 -->
    		<property name="maxIdle" value="2" />
    		<!-- 最小空闲值，当空闲的连接数少于阈值时，连接池会预申请一些连接，以免洪峰来时来不及申请 -->
    		<property name="minIdle" value="1" />
    	</bean>
    	
    	<!-- 配置SessionFactory(Spring数据源) -->
    	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    		<!-- 设置数据源 -->
    		<property name="dataSource" ref="dataSource" />
    		<!-- 接管了Hibernate对象映射文件 -->
    		<property name="mappingResources">
    			<list>
    				<value>com/pc/domain/Employee.hbm.xml</value>
    				<value>com/pc/domain/Department.hbm.xml</value>
    			</list>
    		</property>
    		<property name="hibernateProperties">
    			<value>
	        		hibernate.dialect=org.hibernate.dialect.OracleDialect
	        		hibernate.hbm2ddl.auto=update
					hibernate.show_sql=true
					hibernate.format_sql=true
					hibernate.cache.use_second_level_cache=true
        	    	hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
        	    	hibernate.generate_statistics=true
	 			</value>
    		</property>
    	</bean>
    	
    	
    	<!-- 配置EmployeeService对象 -->
    	<!-- <bean id="employeeService" class="com.pc.service.imp.EmployeeService">
    		<property name="sessionFactory" ref="sessionFactory" />
    	</bean> -->
    	<!-- 配置EmployeeService对象，通过注解的方式来注入属性值,spring会启用byName的方式注入属性值 -->
    	<bean id="employeeService" class="com.pc.service.imp.EmployeeService" />
    	
    	<!-- 配置DepartmentService对象，注解方式 -->
    	<bean id="departmentService" class="com.pc.service.imp.DepartmentService" />
    	
    	<!-- 配置action -->
    	<!-- 配置登录action -->
    	<bean name="/login" class="com.pc.web.action.LoginAction" scope="prototype">
    		<property name="employeeServiceInter" ref="employeeService" />
    	</bean>
    	<!-- 配置雇员action -->
    	<bean name="/employee" class="com.pc.web.action.EmployeeAction" scope="prototype">
    		<property name="departmentServiceInter" ref="departmentService" />
    		<property name="employeeServiceInter" ref="employeeService" />
    	</bean>
    	
    	<!-- 配置事务管理器，统一管理sessionFactory的事务 -->
    	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    		<property name="sessionFactory" ref="sessionFactory" />
    	</bean>
    	
    	<!-- 启用事务注解 -->
    	<tx:annotation-driven transaction-manager="transactionManager" />
    	
    	
</beans>